---
title: "Growth Modeling Basics"
author: "Nedim Yel, Ph.D."
format:
  html:
    toc: true
    toc-location: left
editor: visual
---

## Overview

In this tutorial, we demonstrate how to work with basics of growth modeling. We describe the data, run some individual level models, and work through no-growth and linear growth modeling examples. We then expand on that model in two ways. We add a predictor - to get the conditional growth model; and we change the time-metric - to illustrate how alternative time metrics facilitate different interpretations.

```{r include=FALSE}

create_dt <- function(x){
  DT::datatable(x,  
                #filter = 'top',
                extensions = 'Buttons',
                options = list(dom = 'Blfrtip',
                               #buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
                               buttons = c('csv'),
                               lengthMenu = list(c(25,50,-1),
                                                 c(25,50,"All"))))
}

```

::: panel-tabset
## Libraries

```{r}
#| warning: false

# Basic Functions
library(psych)  

# Plotting
library(ggplot2)

# Fast data management
library(data.table) 

# For mixed effects models
library(lme4)

# For mixed effects models
library(nlme)

# For data management
library(dplyr) 

# To read in csv files
library(readr)
library(magrittr)
library(tidyr)

```

## Data

For the tutorial, we use 4-occasion WISC data. You can download the data by clicking the csv button below.

```{r echo=FALSE, message=FALSE, warning=FALSE}
dr <- read_csv("Data/00001 - wisc3raw.csv")
create_dt(dr)
```

## Variables

It's always a good idea to keep the variables of interest in our analysis dataset. For this tutorial, we use the id variable; the repeated measures outcome variables verb1, verb2, verb4, verb6; and the predictors grad and momed variables.

```{r echo=TRUE, message=FALSE, warning=FALSE}

analysis_data <- dr %>% 
  dplyr::select(id, 
                verb1, 
                verb2, 
                verb4, 
                verb6, 
                grad,
                momed)
```

## Descriptive Statistics

There are several libraries in R for descriptive statistics but we use the describe function from the psych package.

```{r echo=TRUE, message=FALSE, warning=FALSE}

psych::describe(analysis_data %>% select(-id)) %>% 
  select(-c(vars,mad,trimmed))

```

## Long Data Format

Multilevel modeling analyses typically require a long data set. So, we also need to reshape the wide data format to long data format. You can download this latest version of the data by clicking the link below.

```{r echo=TRUE, message=FALSE, warning=FALSE}

final_data <- analysis_data %>% 
  pivot_longer(cols = c("verb1", "verb2", "verb4", "verb6"),
               names_to = "grade",
               values_to = "verb") %>% 
  dplyr::mutate(grade = stringr::str_replace(grade,"verb","")) %>% 
  dplyr::select(id,grade,verb,grad,momed) %>% 
  dplyr::mutate(grade = as.numeric(grade))

create_dt(final_data)


```
:::

## Regression Approach

First, let's focus on one of the participants data

::: panel-tabset
## One-Person Data

::: panel-tabset
## Plot

```{r}

id23 <- final_data %>% 
  dplyr::filter(id == 23)
  
ggplot(data = id23, 
       aes(x = grade, y = verb, group = id)) +
  geom_point() + 
  geom_line() +
  xlab("Grade") + 
  ylab("WISC Verbal Score") + ylim(0,50) +
  theme_bw()

```

## Regression

```{r}

linear_id23 <- lm(formula = verb ~ 1 + grade, 
                  data    = id23)

jtools::summ(linear_id23)


```

## Regression Line

```{r}

ggplot(data = id23, 
       aes(x = grade, y = verb, group = id)) +
  geom_point() + 
  geom_line() +
  geom_smooth(method = lm,
              se = FALSE,
              colour = "blue",
              linewidth = 1) +
  xlab("Grade") +
  ylab("WISC Verbal Score") + ylim(0, 100) +
  scale_x_continuous(breaks = seq(1, 6, by = 1)) + 
  theme_bw()


```
:::

## All Participants

::: panel-tabset
## Model Fit

First, we need to convert our dataset into a datatable to faster process

```{r}

final_data <- data.table::data.table(final_data)
#collecting regression output by id 
indiv_reg <- final_data[,c(rc = as.list(coef(lm(verb ~ grade))), 
                           rs = as.list(summary(lm(verb ~ grade))$sigma)), 
                        by = id] %>% 
  as.data.frame()

# Descriptives
psych::describe(indiv_reg[-1]) %>% 
  dplyr::select(-c(vars,mad,trimmed))

```

## Parameter Correlations

First, we need to convert our dataset into a datatable to faster process

```{r}

final_data <- data.table::data.table(final_data)
#collecting regression output by id 
indiv_reg <- final_data[,c(reg_1       = as.list(coef(lm(verb ~ grade))), 
                           reg_1_sigma = as.list(summary(lm(verb ~ grade))$sigma)), 
                        by = id] %>% 
  as.data.frame()

# Descriptives
psych::describe(indiv_reg[-1]) %>% 
  dplyr::select(-c(vars,mad,trimmed))

```
:::
:::
